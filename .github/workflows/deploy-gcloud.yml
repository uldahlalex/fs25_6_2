name: Deploy to Google Cloud Run

on:
  workflow_dispatch:
  push:

jobs:
  deploy:
    runs-on: ubuntu-latest

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}
      
      
      #1. find the service account: gcloud iam service-accounts list
      #if you don't have one: 
      #gcloud iam service-accounts create YOUR_SERVICE_ACCOUNT_NAME          
      #if you don't have necessary roles for service accounts: 
      #gcloud projects add-iam-policy-binding YOUR_PROJECT_ID --member=serviceAccount:YOUR_SERVICE_ACCOUNT_NAME@YOUR_PROJECT_ID.iam.gserviceaccount.com --role=roles/cloudrun.admin
      #gcloud projects add-iam-policy-binding YOUR_PROJECT_ID --member=serviceAccount:YOUR_SERVICE_ACCOUNT_NAME@YOUR_PROJECT_ID.iam.gserviceaccount.com --role=roles/iam.serviceAccountUser           
      
      #2. create key for service account: gcloud iam service-accounts keys create key.json --iam-account YOUR_SERVICE_ACCOUNT_EMAIL


      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: fs25
          region: europe-north1
          flags: --allow-unauthenticated
          source: .
          env_vars: |-
            APPOPTIONS__DragonflyConnectionString=${{ secrets.DRAGONFLY }}

            - name: Allow unauthenticated invocations
              run: |
                gcloud run services add-iam-policy-binding fs25 \
                  --region=europe-north1 \
                  --member="allUsers" \
                  --role="roles/run.invoker"
          
      - name: Show Output
        run: echo ${{ steps.deploy.outputs.url }}
